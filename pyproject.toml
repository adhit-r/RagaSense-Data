[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ragasense-data"
version = "1.0.0"
description = "A comprehensive, unified dataset for Indian Classical Music research"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "RagaSense Team", email = "contact@ragasense.org"},
]
keywords = ["music", "ragas", "carnatic", "hindustani", "machine-learning", "dataset"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Researchers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
]

dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "librosa>=0.9.0",
    "soundfile>=0.10.0",
    "tensorflow>=2.10.0",
    "torch>=1.12.0",
    "fastapi>=0.78.0",
    "uvicorn>=0.17.0",
    "tqdm>=4.64.0",
    "requests>=2.28.0",
    "wandb>=0.13.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.950",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/ragasense/ragasense-data"
Documentation = "https://ragasense-data.readthedocs.io"
Repository = "https://github.com/ragasense/ragasense-data.git"
"Bug Tracker" = "https://github.com/ragasense/ragasense-data/issues"

[project.scripts]
ragasense-explore = "scripts.exploration.explore_ragasense_data:main"
ragasense-process = "scripts.data_processing.simple_saraga_processor:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["scripts*", "ml_models*", "tools*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]


---
// Architecture Section Component
import MermaidChart from './MermaidChart.astro';
---

<section id="architecture" class="py-16 bg-gray-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-12">
      <h2 class="text-3xl font-bold text-gray-900 mb-4">Data Architecture</h2>
      <p class="text-lg text-gray-600 max-w-3xl mx-auto">
        Comprehensive multi-database architecture supporting advanced research and analysis capabilities.
      </p>
    </div>

    <!-- Architecture Overview -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-12">
      <!-- JSON Database -->
      <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
        <div class="flex items-center mb-4">
          <div class="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mr-4">
            <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4"></path>
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-gray-900">JSON Database</h3>
        </div>
        <p class="text-gray-600 mb-4">Structured data storage with comprehensive metadata</p>
        <ul class="text-sm text-gray-600 space-y-2">
          <li>• 886 Individual Ragas</li>
          <li>• 4,497 Raga Combinations</li>
          <li>• 1,292 Artists</li>
          <li>• 470,544 YouTube Links</li>
          <li>• Cross-tradition mappings</li>
        </ul>
      </div>

      <!-- Neo4j Graph Database -->
      <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
        <div class="flex items-center mb-4">
          <div class="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mr-4">
            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-gray-900">Neo4j Graph</h3>
        </div>
        <p class="text-gray-600 mb-4">Relationship mapping and complex queries</p>
        <ul class="text-sm text-gray-600 space-y-2">
          <li>• Raga Similarity Networks</li>
          <li>• Cross-Tradition Mappings</li>
          <li>• Artist-Performance Graphs</li>
          <li>• Ragamalika Decomposition</li>
          <li>• Complex Relationship Queries</li>
        </ul>
      </div>

      <!-- Vector Database -->
      <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
        <div class="flex items-center mb-4">
          <div class="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mr-4">
            <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-gray-900">Vector Database</h3>
        </div>
        <p class="text-gray-600 mb-4">Similarity search and content-based analysis</p>
        <ul class="text-sm text-gray-600 space-y-2">
          <li>• Audio Feature Vectors</li>
          <li>• Melodic Pattern Analysis</li>
          <li>• Text Embeddings</li>
          <li>• Similarity Search</li>
          <li>• ML Model Integration</li>
        </ul>
      </div>
    </div>

    <!-- Data Flow Diagram -->
    <div class="mb-12">
      <MermaidChart 
        title="Data Processing Pipeline"
        chart={`graph TD
    A[Ramanarunachalam Repository<br/>3.7GB, 20K+ files] --> B[Data Extraction]
    C[Saraga Carnatic<br/>13.4GB, 1,982 audio] --> B
    D[Saraga Hindustani<br/>3.8GB, 216 audio] --> B
    E[Saraga-Carnatic-Melody-Synth<br/>339 audio files] --> B
    
    B --> F[Quality Issues Detected]
    F --> G[4,497 Combined Ragas]
    F --> H[Empty Traditions]
    F --> I[Duplicates]
    
    G --> J[Data Cleaning Process]
    H --> J
    I --> J
    
    J --> K[✅ 886 Individual Ragas]
    J --> L[✅ 4,497 Raga Combinations]
    J --> M[✅ All Traditions Assigned]
    
    K --> N[Multi-Database Storage]
    L --> N
    M --> N
    
    N --> O[JSON Database<br/>Structured Metadata]
    N --> P[Neo4j Graph<br/>Relationships]
    N --> Q[Vector Database<br/>Similarity Search]
    
    style F fill:#fef2f2
    style G fill:#fef2f2
    style H fill:#fef2f2
    style I fill:#fef2f2
    style J fill:#fef3c7
    style K fill:#f0fdf4
    style L fill:#f0fdf4
    style M fill:#f0fdf4
    style N fill:#f0fdf4
    style O fill:#f0fdf4
    style P fill:#f0fdf4
    style Q fill:#f0fdf4`}
      />
    </div>

    <!-- Entity Relationship Diagram -->
    <div class="mb-12">
      <MermaidChart 
        title="Entity Relationship Diagram"
        chart={`erDiagram
    RAGA {
        string raga_id PK
        string name
        string tradition
        int song_count
        string[] sources
        object metadata
    }
    
    RAGA_COMBINATION {
        string combination_id PK
        string name
        string[] individual_ragas
        string tradition
        int song_count
    }
    
    ARTIST {
        string artist_id PK
        string name
        string tradition
        int song_count
    }
    
    SONG {
        string song_id PK
        string title
        string[] raga_ids
        string artist_id FK
        string[] youtube_links
    }
    
    RAGAMALIKA_COMPOSITION {
        string composition_id PK
        string name
        string composer
        string[] constituent_ragas
        string tradition
    }
    
    CROSS_TRADITION_MAPPING {
        string mapping_id PK
        string carnatic_raga_id FK
        string hindustani_raga_id FK
        string relationship_type
        float similarity_score
    }
    
    RAGA ||--o{ SONG : "performed_in"
    RAGA_COMBINATION ||--o{ SONG : "performed_in"
    ARTIST ||--o{ SONG : "performs"
    RAGAMALIKA_COMPOSITION ||--o{ RAGA : "contains"
    RAGA ||--o{ CROSS_TRADITION_MAPPING : "maps_to"`}
      />
    </div>

    <!-- Database Schema Overview -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      <!-- Entity Relationships -->
      <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
        <h3 class="text-xl font-semibold text-gray-900 mb-4">Entity Relationships</h3>
        <div class="space-y-3">
          <div class="flex items-center">
            <div class="w-3 h-3 bg-blue-500 rounded-full mr-3"></div>
            <span class="text-sm text-gray-600">Individual Raga ↔ Song (Many-to-Many)</span>
          </div>
          <div class="flex items-center">
            <div class="w-3 h-3 bg-green-500 rounded-full mr-3"></div>
            <span class="text-sm text-gray-600">Ragamalika Composition → Individual Ragas (One-to-Many)</span>
          </div>
          <div class="flex items-center">
            <div class="w-3 h-3 bg-purple-500 rounded-full mr-3"></div>
            <span class="text-sm text-gray-600">Artist → Song (One-to-Many)</span>
          </div>
          <div class="flex items-center">
            <div class="w-3 h-3 bg-orange-500 rounded-full mr-3"></div>
            <span class="text-sm text-gray-600">Composer → Song (One-to-Many)</span>
          </div>
          <div class="flex items-center">
            <div class="w-3 h-3 bg-red-500 rounded-full mr-3"></div>
            <span class="text-sm text-gray-600">Carnatic Raga ↔ Hindustani Raga (Cross-Tradition)</span>
          </div>
        </div>
      </div>

      <!-- Vector Types -->
      <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
        <h3 class="text-xl font-semibold text-gray-900 mb-4">Vector Database Types</h3>
        <div class="space-y-3">
          <div class="flex items-center justify-between">
            <span class="text-sm text-gray-600">Audio Features</span>
            <span class="text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded">128D</span>
          </div>
          <div class="flex items-center justify-between">
            <span class="text-sm text-gray-600">Melodic Patterns</span>
            <span class="text-xs bg-green-100 text-green-800 px-2 py-1 rounded">64D</span>
          </div>
          <div class="flex items-center justify-between">
            <span class="text-sm text-gray-600">Rhythmic Patterns</span>
            <span class="text-xs bg-purple-100 text-purple-800 px-2 py-1 rounded">64D</span>
          </div>
          <div class="flex items-center justify-between">
            <span class="text-sm text-gray-600">Text Embeddings</span>
            <span class="text-xs bg-orange-100 text-orange-800 px-2 py-1 rounded">384D</span>
          </div>
          <div class="flex items-center justify-between">
            <span class="text-sm text-gray-600">Metadata Vectors</span>
            <span class="text-xs bg-red-100 text-red-800 px-2 py-1 rounded">32D</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
